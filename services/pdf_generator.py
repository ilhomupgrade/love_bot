"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä PDF –æ—Ç—á—ë—Ç–æ–≤ –æ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
"""

from fpdf import FPDF
from datetime import datetime
import os


class PDF(FPDF):
    def header(self):
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        self.set_font('Arial', 'B', 20)
        self.set_text_color(102, 126, 234)
        self.cell(0, 10, 'LoveBot - Report', align='C', ln=True)
        self.ln(5)

    def footer(self):
        self.set_y(-15)
        self.set_font('Arial', '', 8)
        self.set_text_color(156, 163, 175)
        self.cell(0, 10, f'Created: {datetime.now().strftime("%d.%m.%Y %H:%M")}', align='C')


def generate_pdf_report(
    compatibility_score: int,
    report: str,
    partner1_name: str = "–ü–∞—Ä—Ç–Ω—ë—Ä 1",
    partner2_name: str = "–ü–∞—Ä—Ç–Ω—ë—Ä 2",
    output_path: str = None
) -> str:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–π PDF –æ—Ç—á—ë—Ç –æ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏

    Args:
        compatibility_score: –ø—Ä–æ—Ü–µ–Ω—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ (0-100)
        report: —Ç–µ–∫—Å—Ç –æ—Ç—á—ë—Ç–∞ –æ—Ç AI
        partner1_name: –∏–º—è –ø–µ—Ä–≤–æ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞
        partner2_name: –∏–º—è –≤—Ç–æ—Ä–æ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞
        output_path: –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è PDF

    Returns:
        str: –ø—É—Ç—å –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–º—É PDF —Ñ–∞–π–ª—É
    """

    if output_path is None:
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        output_path = f"reports/compatibility_report_{timestamp}.pdf"

    # –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs(os.path.dirname(output_path), exist_ok=True)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    if compatibility_score >= 80:
        color = (16, 185, 129)  # –∑–µ–ª—ë–Ω—ã–π
        emoji = "üíö"
        level = "–û—Ç–ª–∏—á–Ω–∞—è"
    elif compatibility_score >= 60:
        color = (245, 158, 11)  # –æ—Ä–∞–Ω–∂–µ–≤—ã–π
        emoji = "üíõ"
        level = "–•–æ—Ä–æ—à–∞—è"
    elif compatibility_score >= 40:
        color = (59, 130, 246)  # —Å–∏–Ω–∏–π
        emoji = "üíô"
        level = "–°—Ä–µ–¥–Ω—è—è"
    else:
        color = (239, 68, 68)  # –∫—Ä–∞—Å–Ω—ã–π
        emoji = "‚ù§Ô∏è"
        level = "–¢—Ä–µ–±—É–µ—Ç —Ä–∞–±–æ—Ç—ã"

    # –°–æ–∑–¥–∞—ë–º PDF
    pdf = PDF()
    pdf.add_page()
    pdf.set_font('Arial', '', 12)

    # –ë–ª–æ–∫ —Å –ø—Ä–æ—Ü–µ–Ω—Ç–æ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    pdf.set_fill_color(*color)
    pdf.set_text_color(255, 255, 255)
    pdf.set_font('Arial', 'B', 40)
    pdf.cell(0, 30, f'{compatibility_score}%', align='C', fill=True, ln=True)

    # –£—Ä–æ–≤–µ–Ω—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    pdf.set_font('Arial', 'B', 18)
    pdf.cell(0, 15, f'{level}', align='C', ln=True)
    pdf.ln(10)

    # –ü–∞—Ä—Ç–Ω—ë—Ä—ã
    pdf.set_text_color(31, 41, 55)
    pdf.set_font('Arial', '', 14)
    pdf.cell(0, 10, f'{partner1_name} x {partner2_name}', align='C', ln=True)
    pdf.ln(10)

    # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
    pdf.set_draw_color(229, 231, 235)
    pdf.line(20, pdf.get_y(), 190, pdf.get_y())
    pdf.ln(10)

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –æ—Ç—á—ë—Ç–∞
    pdf.set_font('Arial', 'B', 16)
    pdf.set_text_color(102, 126, 234)
    pdf.cell(0, 10, 'Analysis Results', ln=True)
    pdf.ln(5)

    # –¢–µ–∫—Å—Ç –æ—Ç—á—ë—Ç–∞
    pdf.set_font('Arial', '', 11)
    pdf.set_text_color(75, 85, 99)

    # –†–∞–∑–±–∏–≤–∞–µ–º –æ—Ç—á—ë—Ç –Ω–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º
    paragraphs = report.split('\n\n')
    for paragraph in paragraphs:
        if paragraph.strip():
            # –£–±–∏—Ä–∞–µ–º markdown —Å–∏–º–≤–æ–ª—ã –∏ –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–∏–º–≤–æ–ª—ã
            clean_text = paragraph.replace('**', '').replace('*', '').replace('#', '')
            # –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ ASCII –∏ –±–∞–∑–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã
            clean_text = clean_text.encode('ascii', 'ignore').decode('ascii')

            if not clean_text.strip():
                continue

            # –ï—Å–ª–∏ —ç—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ü–∏—Ñ—Ä—ã)
            if clean_text.strip()[0].isdigit() and '.' in clean_text[:5]:
                pdf.ln(3)
                pdf.set_font('Arial', 'B', 12)
                pdf.set_text_color(102, 126, 234)
                try:
                    pdf.multi_cell(0, 7, clean_text)
                except:
                    pass
                pdf.set_font('Arial', '', 11)
                pdf.set_text_color(75, 85, 99)
            else:
                try:
                    pdf.multi_cell(0, 7, clean_text)
                    pdf.ln(3)
                except:
                    pass

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º PDF
    pdf.output(output_path)

    return output_path
